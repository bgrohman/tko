{"tagline":"tko framework","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"#tko\r\ntko is a framework for writing modular JavaScript with models, collections, routing, pub/sub, notifications, and client-side storage. If you like Backbone's models and collections but don't want to give up Knockout's two-way data-binding, then tko is for you.\r\n\r\n##Example\r\nThe included [example](https://github.com/bgrohman/tko/tree/master/example/example-app) shows tko's Application, Model, and Collection objects used to build a todo list application. Check out the [unit tests](https://github.com/bgrohman/tko/blob/master/test/tko-test.js) for more detail.\r\n\r\n###Creating a Model\r\n```javascript\r\nvar Person = tko.Model.extend({\r\n    urlRoot: '/person',\r\n    first: ko.observable(),\r\n    last: ko.observable(),\r\n    full: function() {\r\n        return this.first() + ' ' + this.last();\r\n    }\r\n});\r\n\r\nvar neil = new Person({\r\n    first: 'Neil',\r\n    last: 'Stephenson'\r\n});\r\n```\r\n###Creating a Collection\r\n```javascript\r\nvar People = tko.Collection.extend({\r\n    model: Person,\r\n    url: '/people',\r\n    sortBy: 'first'\r\n});\r\n\r\nvar authors = new People([\r\n    {id: 1, first: 'Neil', last: 'Stephenson'},\r\n    {id: 2, first: 'J. R. R.', last: 'Tolkien'},\r\n    {id: 3, first: 'Patrick', last: 'Rothfuss'}\r\n]);\r\n```\r\n\r\n##Dependencies\r\n- [Knockout](http://knockoutjs.com/)\r\n- [Underscore](http://underscorejs.org/)\r\n- [jQuery](http://jquery.com/)\r\n- [Amplify](http://amplifyjs.org/)\r\n- [Routie](http://projects.jga.me/routie/)\r\n- [Bootstrap](http://twitter.github.com/bootstrap/)\r\n","name":"tko"}